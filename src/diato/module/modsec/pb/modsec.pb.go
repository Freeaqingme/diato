// Code generated by protoc-gen-go. DO NOT EDIT.
// source: modsec/pb/modsec.proto

/*
Package modsec is a generated protocol buffer package.

It is generated from these files:
	modsec/pb/modsec.proto

It has these top-level messages:
	RuleSets
	RuleSet
*/
package pb

import proto "github.com/golang/protobuf/proto"
import fmt "fmt"
import math "math"
import google_protobuf "github.com/golang/protobuf/ptypes/empty"

import (
	context "golang.org/x/net/context"
	grpc "google.golang.org/grpc"
)

// Reference imports to suppress errors if they are not otherwise used.
var _ = proto.Marshal
var _ = fmt.Errorf
var _ = math.Inf

// This is a compile-time assertion to ensure that this generated file
// is compatible with the proto package it is being compiled against.
// A compilation error at this line likely means your copy of the
// proto package needs to be updated.
const _ = proto.ProtoPackageIsVersion2 // please upgrade the proto package

type RuleSets struct {
	RuleSets []*RuleSet `protobuf:"bytes,1,rep,name=RuleSets" json:"RuleSets,omitempty"`
}

func (m *RuleSets) Reset()                    { *m = RuleSets{} }
func (m *RuleSets) String() string            { return proto.CompactTextString(m) }
func (*RuleSets) ProtoMessage()               {}
func (*RuleSets) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{0} }

func (m *RuleSets) GetRuleSets() []*RuleSet {
	if m != nil {
		return m.RuleSets
	}
	return nil
}

type RuleSet struct {
	Rules string `protobuf:"bytes,1,opt,name=rules" json:"rules,omitempty"`
	// Worker is not supposed to do anything with the
	// filename, other than display it to the user in
	// case it contains errors
	Filename string `protobuf:"bytes,2,opt,name=filename" json:"filename,omitempty"`
}

func (m *RuleSet) Reset()                    { *m = RuleSet{} }
func (m *RuleSet) String() string            { return proto.CompactTextString(m) }
func (*RuleSet) ProtoMessage()               {}
func (*RuleSet) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{1} }

func (m *RuleSet) GetRules() string {
	if m != nil {
		return m.Rules
	}
	return ""
}

func (m *RuleSet) GetFilename() string {
	if m != nil {
		return m.Filename
	}
	return ""
}

func init() {
	proto.RegisterType((*RuleSets)(nil), "modsec.RuleSets")
	proto.RegisterType((*RuleSet)(nil), "modsec.RuleSet")
}

// Reference imports to suppress errors if they are not otherwise used.
var _ context.Context
var _ grpc.ClientConn

// This is a compile-time assertion to ensure that this generated file
// is compatible with the grpc package it is being compiled against.
const _ = grpc.SupportPackageIsVersion4

// Client API for ModuleModsec service

type ModuleModsecClient interface {
	GetRules(ctx context.Context, in *google_protobuf.Empty, opts ...grpc.CallOption) (*RuleSets, error)
}

type moduleModsecClient struct {
	cc *grpc.ClientConn
}

func NewModuleModsecClient(cc *grpc.ClientConn) ModuleModsecClient {
	return &moduleModsecClient{cc}
}

func (c *moduleModsecClient) GetRules(ctx context.Context, in *google_protobuf.Empty, opts ...grpc.CallOption) (*RuleSets, error) {
	out := new(RuleSets)
	err := grpc.Invoke(ctx, "/modsec.ModuleModsec/GetRules", in, out, c.cc, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

// Server API for ModuleModsec service

type ModuleModsecServer interface {
	GetRules(context.Context, *google_protobuf.Empty) (*RuleSets, error)
}

func RegisterModuleModsecServer(s *grpc.Server, srv ModuleModsecServer) {
	s.RegisterService(&_ModuleModsec_serviceDesc, srv)
}

func _ModuleModsec_GetRules_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(google_protobuf.Empty)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(ModuleModsecServer).GetRules(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/modsec.ModuleModsec/GetRules",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(ModuleModsecServer).GetRules(ctx, req.(*google_protobuf.Empty))
	}
	return interceptor(ctx, in, info, handler)
}

var _ModuleModsec_serviceDesc = grpc.ServiceDesc{
	ServiceName: "modsec.ModuleModsec",
	HandlerType: (*ModuleModsecServer)(nil),
	Methods: []grpc.MethodDesc{
		{
			MethodName: "GetRules",
			Handler:    _ModuleModsec_GetRules_Handler,
		},
	},
	Streams:  []grpc.StreamDesc{},
	Metadata: "modsec/pb/modsec.proto",
}

func init() { proto.RegisterFile("modsec/pb/modsec.proto", fileDescriptor0) }

var fileDescriptor0 = []byte{
	// 211 bytes of a gzipped FileDescriptorProto
	0x1f, 0x8b, 0x08, 0x00, 0x00, 0x00, 0x00, 0x00, 0x02, 0xff, 0xe2, 0x12, 0xcb, 0xcd, 0x4f, 0x29,
	0x4e, 0x4d, 0xd6, 0x2f, 0x48, 0xd2, 0x87, 0xb0, 0xf4, 0x0a, 0x8a, 0xf2, 0x4b, 0xf2, 0x85, 0xd8,
	0x20, 0x3c, 0x29, 0xe3, 0xf4, 0xcc, 0x92, 0x8c, 0xd2, 0x24, 0xbd, 0xe4, 0xfc, 0x5c, 0xfd, 0xf4,
	0xfc, 0x9c, 0xc4, 0xbc, 0x74, 0x7d, 0xb0, 0x82, 0xa4, 0xd2, 0x34, 0xfd, 0x82, 0x92, 0xca, 0x82,
	0xd4, 0x62, 0xfd, 0xd4, 0xdc, 0x82, 0x92, 0x4a, 0x08, 0x09, 0xd1, 0xac, 0x64, 0xce, 0xc5, 0x11,
	0x54, 0x9a, 0x93, 0x1a, 0x9c, 0x5a, 0x52, 0x2c, 0xa4, 0x8d, 0x60, 0x4b, 0x30, 0x2a, 0x30, 0x6b,
	0x70, 0x1b, 0xf1, 0xeb, 0x41, 0x6d, 0x82, 0x8a, 0x07, 0xc1, 0x15, 0x28, 0x59, 0x73, 0xb1, 0x43,
	0xd9, 0x42, 0x22, 0x5c, 0xac, 0x45, 0xa5, 0x39, 0xa9, 0x20, 0x4d, 0x8c, 0x1a, 0x9c, 0x41, 0x10,
	0x8e, 0x90, 0x14, 0x17, 0x47, 0x5a, 0x66, 0x4e, 0x6a, 0x5e, 0x62, 0x6e, 0xaa, 0x04, 0x13, 0x58,
	0x02, 0xce, 0x37, 0x72, 0xe3, 0xe2, 0xf1, 0xcd, 0x4f, 0x29, 0xcd, 0x49, 0xf5, 0x05, 0x1b, 0x2f,
	0x64, 0xc6, 0xc5, 0xe1, 0x9e, 0x5a, 0x12, 0x04, 0xd6, 0x27, 0xa6, 0x97, 0x9e, 0x9f, 0x9f, 0x9e,
	0x93, 0xaa, 0x07, 0x73, 0xbc, 0x9e, 0x2b, 0xc8, 0xbd, 0x52, 0x02, 0x68, 0x6e, 0x29, 0x56, 0x62,
	0x48, 0x62, 0x03, 0xab, 0x31, 0x06, 0x04, 0x00, 0x00, 0xff, 0xff, 0xb9, 0x11, 0x3b, 0x54, 0x1b,
	0x01, 0x00, 0x00,
}
